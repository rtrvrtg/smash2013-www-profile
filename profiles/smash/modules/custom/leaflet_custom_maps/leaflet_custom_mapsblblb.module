<?php

/**
 * @file
 * Basic setup for leaflet_custom_maps.
 */

/**
 * Implements hook_views_api().
 */
function leaflet_custom_maps_views_api() {
  return array('api' => 3);
}

/**
 * Define a custom map entity.
 */
/**
* Implements hook_entity_info().
*/
function leaflet_custom_maps_entity_info() {
  $entities = array(
    'leaflet_custom_map' => array(
      'label' => t('Custom Leaflet Map'),
      'entity class' => 'LeafletCustomMap',
      'controller class' => 'LeafletCustomMapController',
      'base table' => 'leaflet_custom_map',
      'fieldable' => TRUE,
      'entity keys' => array(
        'id' => 'lcmid',
        'bundle' => 'type',
      ),
      'bundle keys' => array(
        'bundle' => 'type',
      ),
      'bundles' => array(),
      'load hook' => 'leaflet_custom_map_load',
      'view modes' => array(
        'full' => array(
          'label' => t('Default'),
          'custom settings' => FALSE,
        ),
      ),
      'label callback' => 'entity_class_label',
      'uri callback' => 'entity_class_uri',
      'module' => 'leaflet_custom_map',
      'access callback' => 'leaflet_custom_map_access',
    ),
  );
  return $entities;
}

/**
* Implements hook_menu().
*/
function leaflet_custom_map_menu() {
  $items = array();
  $items['leaflet-custom-map/add'] = array(
    'title' => 'Add custom Leaflet map',
    'page callback' => 'leaflet_custom_map_admin_add_page',
    'access arguments' => array('administer leaflet_custom_map entities'),
    'file' => 'leaflet_custom_map.admin.inc',
    'type' => MENU_LOCAL_ACTION,
    'tab_parent' => 'leaflet-custom-map',
    'tab_root' => 'leaflet-custom-map',
  );

  $map_uri = 'leaflet-custom-map/%map';
  $map_uri_argument_position = 1;

  $items[$map_uri] = array(
    'title callback' => 'entity_label',
    'title arguments' => array('leaflet_custom_map', $map_uri_argument_position),
    'page callback' => 'leaflet_custom_map_view',
    'page arguments' => array($map_uri_argument_position),
    'access callback' => 'entity_access',
    'access arguments' => array('view', 'leaflet_custom_map', $map_uri_argument_position),
    'file' => 'leaflet_custom_map.pages.inc',
  );

  $items[$map_uri . '/view'] = array(
    'title' => 'View',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  $items[$map_uri . '/delete'] = array(
    'title' => 'Delete map',
    'title callback' => 'leaflet_custom_map_label',
    'title arguments' => array($map_uri_argument_position),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('leaflet_custom_map_delete_form', $map_uri_argument_position),
    'access callback' => 'entity_access',
    'access arguments' => array('edit', 'leaflet_custom_map', $map_uri_argument_position),
    'file' => 'leaflet_custom_map.admin.inc',
  );

  $items[$map_uri . '/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('leaflet_custom_map_form', $map_uri_argument_position),
    'access callback' => 'entity_access',
    'access arguments' => array('edit', 'leaflet_custom_map', $map_uri_argument_position),
    'file' => 'leaflet_custom_map.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );

  return $items;
}

/**
 * Implement hook_permission().
 */
function example_task_permission() {
  $permissions = array(
    'create leaflet_custom_map entities' => array(
      'title' => t('Create maps'),
      'description' => t('Allows users to create maps.'),
      'restrict access' => TRUE,
    ),
    'view leaflet_custom_map entities' => array(
      'title' => t('View maps'),
      'description' => t('Allows users to view maps.'),
      'restrict access' => TRUE,
    ),
    'edit any leaflet_custom_map entities' => array(
      'title' => t('Edit any maps'),
      'description' => t('Allows users to edit any maps.'),
      'restrict access' => TRUE,
    ),
    'edit own leaflet_custom_map entities' => array(
      'title' => t('Edit own maps'),
      'description' => t('Allows users to edit own maps.'),
      'restrict access' => TRUE,
    ),
  );
  return $permissions;
}

/**
 * Access callback for Map.
 */
function leaflet_custom_map_access($op, $map, $account = NULL, $entity_type = NULL) {
  global $user;
  if (!isset($account)) {
    $account = $user;
  }
  switch ($op) {
    case 'create':
      return user_access('administer leaflet_custom_map entities', $account)
          || user_access('create leaflet_custom_map entities', $account);
    case 'view':
      return user_access('administer leaflet_custom_map entities', $account)
          || user_access('view leaflet_custom_map entities', $account);
    case 'edit':
      return user_access('administer leaflet_custom_map entities')
          || user_access('edit any leaflet_custom_map entities')
          || (user_access('edit own leaflet_custom_map entities') && ($task->uid == $account->uid));
  }
}

/**
 * Loads all available custom maps.
 */
function _leaflet_custom_maps_load_all() {
	
}

/**
 * Implements hook_leaflet_map_info().
 *
 * Returns a list of custom maps for this module.
 */
function leaflet_custom_maps_leaflet_map_info() {
  return array(
    'OSM Mapnik' =>
    array(
      'label' => 'OSM Mapnik',
      'description' => t('Leaflet default map.'),
      'settings' => array(
        // 'zoom' => 18,
        'minZoom' => 0,
        'maxZoom' => 18,
        'dragging' => TRUE,
        'touchZoom' => TRUE,
        'scrollWheelZoom' => TRUE,
        'doubleClickZoom' => TRUE,
        'zoomControl' => TRUE,
        'attributionControl' => TRUE,
        'trackResize' => TRUE,
        'fadeAnimation' => TRUE,
        'zoomAnimation' => TRUE,
        'closePopupOnClick' => TRUE,
      ),
      'layers' => array(
        'earth' => array(
          'urlTemplate' => 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
          'options' => array(
            'attribution' => 'OSM Mapnik',
          ),
        ),
      ),
    ),
  );
}

