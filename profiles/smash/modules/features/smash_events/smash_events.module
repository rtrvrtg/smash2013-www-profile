<?php
/**
 * @file
 * Code for the SMASH Events feature.
 */

include_once 'smash_events.features.inc';

/**
 * Force event breadcrumb
 */
function smash_events_node_view($node, $view_mode) {
  if ($view_mode == 'full' && node_is_page($node) && $node->type == 'event') {
    $breadcrumb = array();
    $breadcrumb[] = l(t('Home'), NULL);
    $breadcrumb[] = l(t('Events'), 'events');
    drupal_set_breadcrumb($breadcrumb);
    
    $trail[] = array(
      'title' => t('Home'),
      'href' => '<front>',
    );
    $trail[] = array(
      'title' => t('Events'),
      'href' => 'events',
    );
    menu_set_active_trail($trail);
  }
}

/**
 * Add a default event date.
 */
function smash_events_form_event_node_form_alter(&$form, &$form_state, $form_id) {
  $form['#after_build'][] = 'smash_events_form_event_node_form_after';
}

/**
 * Add a default event date - form element hacks.
 */
function smash_events_form_event_node_form_after($form) {
  $event_time = &$form['field_event_date_time'][LANGUAGE_NONE][0];

  // Check To Date by default
  $event_time['show_todate']['#checked'] = TRUE;

  $default_date = strtotime(variable_get('smash_events_default_date') . ' 12:00:00');
  if (empty($event_time['value']['date']['#default_value'])) {
    $event_time['value2']['date']['#default_value'] = date('m/d/Y', $default_date);  
  }
  if (empty($event_time['value']['date']['#default_value'])) {
    $event_time['value2']['date']['#default_value'] = date('m/d/Y', $default_date);  
  }

  $path = drupal_get_path('module', 'smash_events');
  $form['#attached']['js'][] = $path . '/scripts/editor.js';

  return $form;
}

/**
 * Implements hook_theme().
 */
function smash_events_theme($existing, $type, $theme, $path) {
  return array(
    'smash_events_calendar_group' => array(
      'variables' => array(
        'title' => NULL,
        'items' => NULL,
      ),
      'template' => 'templates/smash-events-calendar-group',
    ),
    'smash_events_calendar_item' => array(
      'variables' => array(
        'item' => NULL,
        'rendered_fields' => NULL,
        'classes' => NULL,
      ),
      'template' => 'templates/smash-events-calendar-item',
    ),
    'eventlink_formatter_smash_events_sponsor' => array(
      'variables' => array('element' => NULL),
    ),
  );
}

/**
 * Implements template_preprocess_smash_events_calendar_item().
 */
function template_preprocess_smash_events_calendar_item(&$vars) {
  $item = $vars['item'];
  $vars['item_classes'] = implode(' ', $vars['item_classes']);
  $vars['rendered_fields'] = array($item->rendered);

  $path = drupal_get_path('module', 'smash_events');
  drupal_add_css($path . '/stylesheets/layout.css');
  drupal_add_js('misc/jquery.cookie.js');
  drupal_add_js($path . '/scripts/schedule.js');
}

/**
 * Implements template_preprocess_smash_events_calendar_group().
 */
function template_preprocess_smash_events_calendar_group(&$vars) {
  $vars['machine_title'] = preg_replace('/[^a-z0-9]/', '-', strtolower($vars['title']));
}

/**
 * Implements hook_views_pre_view().
 * Sets up arguments for events page view.
 */
function smash_events_views_pre_view(&$view) {
  if ($view->name == "schedule") {
    $view->args[0] = variable_get('smash_events_default_date');
  }
}

/**
 * Implements hook_views_pre_render().
 * Sets up variable areas for events page view.
 */
function smash_events_views_pre_render(&$view) {
  if ($view->name == "event_list" && $view->current_display == "events_page") {
    // dpm($view);

    $header = &$view->header['area']->options['content'];
    $footer = &$view->footer['area']->options['content'];

    $header_text = variable_get('smash_events_page_header', NULL);
    $footer_text = variable_get('smash_events_page_footer', NULL);

    if (!is_null($header_text)) {
      $header = $header_text;
    }
    if (!is_null($footer_text)) {
      $footer = $footer_text;
    }
  }
}

/**
 * Implements hook_field_formatter_info().
 */
function smash_events_field_formatter_info() {
  return array(
    'smash_events_sponsor' => array(
      'label' => t('Sponsor/Vendor logo link'),
      'field types' => array('link_field'),
      'multiple values' => FIELD_BEHAVIOR_DEFAULT,
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function smash_events_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $elements = array();
  foreach ($items as $delta => $item) {

    $title = $entity->title;
    if (isset($item['text'])) {
      $title = $item['text'];
    }
    if (isset($entity->field_image) && isset($entity->field_image[LANGUAGE_NONE])) {
      $title = theme('image_style', array(
        'style_name' => 'vendor',
        'path' => $entity->field_image[LANGUAGE_NONE][0]['uri'],
      ));
      // $title = $item['text']; 
    }
    if (isset($entity->field_sponsor_logo) && isset($entity->field_sponsor_logo[LANGUAGE_NONE])) {
      $title = theme('image_style', array(
        'style_name' => 'sponsor',
        'path' => $entity->field_sponsor_logo[LANGUAGE_NONE][0]['uri'],
      ));
    }

    $elements[$delta] = array(
      '#theme' => 'link',
      '#path' => $item['url'],
      '#text' => $title,
      '#options' => array(
        'html' => TRUE,
        'attributes' => array(
          'title' => $entity->title,
          'class' => array(),
        ),
      ),
    );

  }
  return $elements;
}
